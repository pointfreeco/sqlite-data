name: CI

on:
  push:
    branches:
      - main
      - cloudkit
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  library:
    name: macOS
    strategy:
      matrix:
        xcode: ['16.4']
        config: ['debug', 'release']
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Run ${{ matrix.config }} tests
        run: swift test -c ${{ matrix.config }}

  examples:
    name: Examples
    strategy:
      matrix:
        xcode: ['16.4']
        config: ['debug']
        scheme: ['Reminders', 'CaseStudies', 'SyncUps']
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: List devices available
        run: xcrun simctl list --json devices available 'iPhone'
      - name: xcodebuild ${{ matrix.scheme }}
        run: make DERIVED_DATA_PATH=~/.derivedData SCHEME="${{ matrix.scheme }}" xcodebuild-raw
      - name: Output test failures
        run: |
          xcrun xcresulttool get test-results tests --path TestResults.xcresult --format json | jq -r '
            .testNodes[]
            | .. | objects | select(.nodeType=="Test Case")
            | . as $tc
            | ($tc.children // [])[]
            | select(.nodeType=="Failure Message")
            | "âœ˜ Test \($tc.name) recorded an issue at \(.name)\n"
          '
        if: failure()

  # NB: GRDB 7.6.1 does not currently build on Linux.
  # linux:
  #   name: Linux
  #   strategy:
  #     matrix:
  #       swift:
  #         - '6.1'
  #   runs-on: ubuntu-latest
  #   container: swift:${{ matrix.swift }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Build Dependencies
  #       run: |
  #         apt-get update
  #         apt-get install -y libsqlite3-dev
  #     - name: Build
  #       run: swift build
